version: '3.6'
services:
  telegraf:
    image: telegraf:1.21.2
    user: root
    entrypoint: "telegraf"
    volumes:
      - ./telegraf/etc/telegraf.conf:/etc/telegraf/telegraf.conf:ro
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - influxdb
    links:
      - influxdb
    ports:
      - '127.0.0.1:8125:8125/udp'
    privileged: true

  influxdb:
    image: influxdb:1.8.10
    env_file: configuration.env
    ports:
      - '127.0.0.1:8086:8086'
    volumes:
      - ./:/imports
      - influxdb_data:/var/lib/influxdb

  grafana:
    image: grafana/grafana:8.0.2
    depends_on:
      - influxdb
    env_file: configuration.env
    links:
      - influxdb
    ports:
      - '127.0.0.1:3000:3000'
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
      - ./grafana/dashboards/:/var/lib/grafana/dashboards/

  web:
    build: ""
    command: bundle exec rails s -p 3001 -b '0.0.0.0'
    volumes:
      - ".:/app"
    ports:
      - '3002:3001'
    depends_on:
      - db
      - elasticsearch
    environment:
      DB_USER: root
      DB_NAME: app
      DB_PASSWORD: password
      DB_HOST: 'db'

  db:
    image: mysql:8.0.27
    platform: linux/amd64
    restart: always
    ports:
      - '3306:3306'
    environment:
      - MYSQL_ROOT_PASSWORD=password
      - MYSQL_DATABASE=app
      - MYSQL_USER=user # mysql -u user -p -- then password is password;
      - MYSQL_PASSWORD=password

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.14.2-arm64
    environment:
      - discovery.type=single-node

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    ports:
      - '80:80'
    depends_on:
      - web

volumes:
  grafana_data: {}
  influxdb_data: {}
